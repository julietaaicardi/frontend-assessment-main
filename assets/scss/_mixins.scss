@use 'variables' as vars;

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: vars.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: vars.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: vars.$breakpoint-xl) { @content; }
  } @else if $breakpoint == 2xl {
    @media (min-width: vars.$breakpoint-2xl) { @content; }
  }
}

// Container mixin
@mixin container {
  max-width: vars.$container-max-width;
  margin: 0 auto;
  padding-left: vars.$container-padding;
  padding-right: vars.$container-padding;
}

// Flex utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-multiline-truncate($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Interactive states
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid vars.$color-primary;
    outline-offset: 2px;
  }
}

@mixin hover-lift {
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: vars.$shadow-lg;
  }
}

// Button base styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: vars.$spacing-sm vars.$spacing-md;
  border: 1px solid transparent;
  border-radius: vars.$border-radius-md;
  font-family: vars.$font-family-base;
  font-size: vars.$font-size-sm;
  font-weight: vars.$font-weight-medium;
  line-height: vars.$line-height-tight;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  @include focus-visible;
}

// Input base styles
@mixin input-base {
  width: 100%;
  padding: vars.$spacing-sm vars.$spacing-md;
  border: 1px solid vars.$color-border;
  border-radius: vars.$border-radius-md;
  font-family: vars.$font-family-base;
  font-size: vars.$font-size-sm;
  line-height: vars.$line-height-normal;
  background-color: vars.$color-background;
  color: vars.$color-text-primary;
  transition: border-color 0.2s ease-in-out;
  
  &::placeholder {
    color: vars.$color-text-secondary;
  }
  
  &:focus {
    outline: none;
    border-color: vars.$color-primary;
  }
  
  @include focus-visible;
}

// Grid utilities
@mixin grid-auto-fit($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: vars.$spacing-md;
}

@mixin grid-auto-fill($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: vars.$spacing-md;
} 